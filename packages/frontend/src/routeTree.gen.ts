/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IssuerRouteImport } from './routes/issuer'
import { Route as HolderRouteImport } from './routes/holder'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HolderTokenIdRouteImport } from './routes/holder.$tokenId'

const IssuerRoute = IssuerRouteImport.update({
  id: '/issuer',
  path: '/issuer',
  getParentRoute: () => rootRouteImport,
} as any)
const HolderRoute = HolderRouteImport.update({
  id: '/holder',
  path: '/holder',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HolderTokenIdRoute = HolderTokenIdRouteImport.update({
  id: '/$tokenId',
  path: '/$tokenId',
  getParentRoute: () => HolderRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/holder': typeof HolderRouteWithChildren
  '/issuer': typeof IssuerRoute
  '/holder/$tokenId': typeof HolderTokenIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/holder': typeof HolderRouteWithChildren
  '/issuer': typeof IssuerRoute
  '/holder/$tokenId': typeof HolderTokenIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/holder': typeof HolderRouteWithChildren
  '/issuer': typeof IssuerRoute
  '/holder/$tokenId': typeof HolderTokenIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/holder' | '/issuer' | '/holder/$tokenId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/holder' | '/issuer' | '/holder/$tokenId'
  id: '__root__' | '/' | '/holder' | '/issuer' | '/holder/$tokenId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HolderRoute: typeof HolderRouteWithChildren
  IssuerRoute: typeof IssuerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/issuer': {
      id: '/issuer'
      path: '/issuer'
      fullPath: '/issuer'
      preLoaderRoute: typeof IssuerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/holder': {
      id: '/holder'
      path: '/holder'
      fullPath: '/holder'
      preLoaderRoute: typeof HolderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/holder/$tokenId': {
      id: '/holder/$tokenId'
      path: '/$tokenId'
      fullPath: '/holder/$tokenId'
      preLoaderRoute: typeof HolderTokenIdRouteImport
      parentRoute: typeof HolderRoute
    }
  }
}

interface HolderRouteChildren {
  HolderTokenIdRoute: typeof HolderTokenIdRoute
}

const HolderRouteChildren: HolderRouteChildren = {
  HolderTokenIdRoute: HolderTokenIdRoute,
}

const HolderRouteWithChildren =
  HolderRoute._addFileChildren(HolderRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HolderRoute: HolderRouteWithChildren,
  IssuerRoute: IssuerRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
